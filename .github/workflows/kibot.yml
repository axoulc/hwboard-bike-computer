name: KiBot CI/CD

on:
  push:
    branches:
      - main
      - master
    paths:
      - '**.kicad_sch'
      - '**.kicad_pcb'
      - 'hwboard.kibot.yaml'
      - '.github/workflows/kibot.yml'
  pull_request:
    paths:
      - '**.kicad_sch'
      - '**.kicad_pcb'
      - 'hwboard.kibot.yaml'
      - '.github/workflows/kibot.yml'
  workflow_dispatch:

# Required for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  kibot:
    runs-on: ubuntu-latest
    name: Generate KiCad outputs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run KiBot
        uses: INTI-CMNB/KiBot@v2_k9
        with:
          config: hwboard.kibot.yaml
          dir: output
          schema: 'PCB/hwboard-bike-computer.kicad_sch'
          board: 'PCB/hwboard-bike-computer.kicad_pcb'
          skip: run_erc,run_drc
          verbose: 2
      
      - name: Organize assets for GitHub Pages
        run: |
          mkdir -p pages/assets
          cp -r output/assets/* pages/assets/
          # Optional: Create an index.html for browsing
          cat > pages/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>KiCad Outputs</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  .gallery { display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 20px; }
                  .gallery img { width: 100%; border: 1px solid #ddd; border-radius: 4px; }
              </style>
          </head>
          <body>
              <h1>KiCad Generated Assets</h1>
              <div class="gallery">
                  <!-- Images will be listed here -->
              </div>
          </body>
          </html>
          EOF
      
      - name: Upload artifacts (for download)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: fabrication-files
          path: output/assets/
          retention-days: 90
      
      - name: Convert PDF first page to PNG
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          # Install ImageMagick if needed
          sudo apt-get update
          sudo apt-get install -y imagemagick ghostscript
          
          # Configure ImageMagick policy to allow PDF conversion
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
          
          # Convert first page of PDF to PNG
          if [ -f "pages/assets/schematics/hwboard-bike-computer-schematic.pdf" ]; then
            convert -density 300 "pages/assets/schematics/hwboard-bike-computer-schematic.pdf[0]" \
                    -quality 90 \
                    -background white \
                    -alpha remove \
                    "pages/assets/schematics/hwboard-bike-computer-schematic.png"
            echo "✓ Successfully converted PDF first page to PNG"
          else
            echo "⚠ PDF file not found at pages/assets/schematics/hwboard-bike-computer-schematic.pdf"
          fi
      
      - name: Setup Pages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/configure-pages@v4
      
      - name: Upload to GitHub Pages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages
      
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        id: deployment
        uses: actions/deploy-pages@v4